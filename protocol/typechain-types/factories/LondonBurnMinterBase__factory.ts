/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LondonBurnMinterBase,
  LondonBurnMinterBaseInterface,
} from "../LondonBurnMinterBase";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mintableNFT",
        type: "address",
      },
      {
        internalType: "address",
        name: "_payableErc20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_externalBurnableERC721",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sushiswap",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "externalBurnableERC721",
    outputs: [
      {
        internalType: "contract ERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "isSigned",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "londonBurn",
    outputs: [
      {
        internalType: "contract LondonBurn",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payableErc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_revealBlockNumber",
        type: "uint256",
      },
    ],
    name: "setRevealBlockNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ultraSonicForkBlockNumber",
        type: "uint256",
      },
    ],
    name: "setUltraSonicForkBlockNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "splitSignature",
    outputs: [
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "sushiswap",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ultraSonicForkBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6002557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6003553480156200005a57600080fd5b506040516200170b3803806200170b833981810160405281019062000080919062000235565b6000620000926200021660201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508273ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050505050620002ef565b600033905090565b6000815190506200022f81620002d5565b92915050565b600080600080608085870312156200024c57600080fd5b60006200025c878288016200021e565b94505060206200026f878288016200021e565b935050604062000282878288016200021e565b925050606062000295878288016200021e565b91505092959194509250565b6000620002ae82620002b5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002e081620002a1565b8114620002ec57600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c6113d66200033560003960006103aa0152600061046d015260006103800152600061070601526113d66000f3fe6080604052600436106100ec5760003560e01c80638677ebe81161008a5780639be28785116100595780639be28785146102c2578063a7bb5803146102ed578063f0f442601461032c578063f2fde38b14610355576100ed565b80638677ebe8146102065780638c7e9245146102435780638da5cb5b1461026c5780639028634d14610297576100ed565b806329da51a0116100c657806329da51a0146101705780635cc02ee91461019957806361d027b3146101c4578063715018a6146101ef576100ed565b80631723f820146100ef5780631eaeda031461011a57806320cf417b14610145576100ed565b5b005b3480156100fb57600080fd5b5061010461037e565b6040516101119190610f7e565b60405180910390f35b34801561012657600080fd5b5061012f6103a2565b60405161013c9190610ff9565b60405180910390f35b34801561015157600080fd5b5061015a6103a8565b6040516101679190610f48565b60405180910390f35b34801561017c57600080fd5b5061019760048036038101906101929190610cf2565b6103cc565b005b3480156101a557600080fd5b506101ae61046b565b6040516101bb9190610f2d565b60405180910390f35b3480156101d057600080fd5b506101d961048f565b6040516101e69190610e7b565b60405180910390f35b3480156101fb57600080fd5b506102046104b5565b005b34801561021257600080fd5b5061022d60048036038101906102289190610c3a565b610608565b60405161023a9190610e96565b60405180910390f35b34801561024f57600080fd5b5061026a60048036038101906102659190610cf2565b610636565b005b34801561027857600080fd5b506102816106d5565b60405161028e9190610e7b565b60405180910390f35b3480156102a357600080fd5b506102ac6106fe565b6040516102b99190610ff9565b60405180910390f35b3480156102ce57600080fd5b506102d7610704565b6040516102e49190610f63565b60405180910390f35b3480156102f957600080fd5b50610314600480360381019061030f9190610cb1565b610728565b60405161032393929190610eb1565b60405180910390f35b34801561033857600080fd5b50610353600480360381019061034e9190610c11565b6107ac565b005b34801561036157600080fd5b5061037c60048036038101906103779190610c11565b610885565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6103d4610a47565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045890610fb9565b60405180910390fd5b8060038190555050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104bd610a47565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190610fb9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006106178686868686610a4f565b8061062b575061062a8686868686610ad9565b5b905095945050505050565b61063e610a47565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c290610fb9565b60405180910390fd5b8060028190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006041845114610771576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076890610fd9565b60405180910390fd5b6020840151925060408401519150606084015160001a9050601b8160ff1610156107a557601b816107a29190611091565b90505b9193909250565b6107b4610a47565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610841576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083890610fb9565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61088d610a47565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461091a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091190610fb9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610f99565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60008573ffffffffffffffffffffffffffffffffffffffff1660018686868660405160008152602001604052604051610a8b9493929190610ee8565b6020604051602081039080840390855afa158015610aad573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff1614905095945050505050565b6000806040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152509050610b49878288604051602001610b2b929190610e53565b60405160208183030381529060405280519060200120878787610a4f565b91505095945050505050565b6000610b68610b6384611039565b611014565b905082815260208101848484011115610b8057600080fd5b610b8b8482856111b7565b509392505050565b600081359050610ba281611344565b92915050565b600081359050610bb78161135b565b92915050565b600082601f830112610bce57600080fd5b8135610bde848260208601610b55565b91505092915050565b600081359050610bf681611372565b92915050565b600081359050610c0b81611389565b92915050565b600060208284031215610c2357600080fd5b6000610c3184828501610b93565b91505092915050565b600080600080600060a08688031215610c5257600080fd5b6000610c6088828901610b93565b9550506020610c7188828901610ba8565b9450506040610c8288828901610bfc565b9350506060610c9388828901610ba8565b9250506080610ca488828901610ba8565b9150509295509295909350565b600060208284031215610cc357600080fd5b600082013567ffffffffffffffff811115610cdd57600080fd5b610ce984828501610bbd565b91505092915050565b600060208284031215610d0457600080fd5b6000610d1284828501610be7565b91505092915050565b610d24816110c8565b82525050565b610d33816110da565b82525050565b610d42816110e6565b82525050565b610d59610d54826110e6565b61122a565b82525050565b6000610d6a8261106a565b610d748185611075565b9350610d848185602086016111c6565b80840191505092915050565b610d9981611127565b82525050565b610da88161114b565b82525050565b610db78161116f565b82525050565b610dc681611193565b82525050565b6000610dd9602683611080565b9150610de4826112a3565b604082019050919050565b6000610dfc602083611080565b9150610e07826112f2565b602082019050919050565b6000610e1f601883611080565b9150610e2a8261131b565b602082019050919050565b610e3e81611110565b82525050565b610e4d8161111a565b82525050565b6000610e5f8285610d5f565b9150610e6b8284610d48565b6020820191508190509392505050565b6000602082019050610e906000830184610d1b565b92915050565b6000602082019050610eab6000830184610d2a565b92915050565b6000606082019050610ec66000830186610d39565b610ed36020830185610d39565b610ee06040830184610e44565b949350505050565b6000608082019050610efd6000830187610d39565b610f0a6020830186610e44565b610f176040830185610d39565b610f246060830184610d39565b95945050505050565b6000602082019050610f426000830184610d90565b92915050565b6000602082019050610f5d6000830184610d9f565b92915050565b6000602082019050610f786000830184610dae565b92915050565b6000602082019050610f936000830184610dbd565b92915050565b60006020820190508181036000830152610fb281610dcc565b9050919050565b60006020820190508181036000830152610fd281610def565b9050919050565b60006020820190508181036000830152610ff281610e12565b9050919050565b600060208201905061100e6000830184610e35565b92915050565b600061101e61102f565b905061102a82826111f9565b919050565b6000604051905090565b600067ffffffffffffffff82111561105457611053611263565b5b61105d82611292565b9050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061109c8261111a565b91506110a78361111a565b92508260ff038211156110bd576110bc611234565b5b828201905092915050565b60006110d3826110f0565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061113282611139565b9050919050565b6000611144826110f0565b9050919050565b60006111568261115d565b9050919050565b6000611168826110f0565b9050919050565b600061117a82611181565b9050919050565b600061118c826110f0565b9050919050565b600061119e826111a5565b9050919050565b60006111b0826110f0565b9050919050565b82818337600083830152505050565b60005b838110156111e45780820151818401526020810190506111c9565b838111156111f3576000848401525b50505050565b61120282611292565b810181811067ffffffffffffffff8211171561122157611220611263565b5b80604052505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b61134d816110c8565b811461135857600080fd5b50565b611364816110e6565b811461136f57600080fd5b50565b61137b81611110565b811461138657600080fd5b50565b6113928161111a565b811461139d57600080fd5b5056fea2646970667358221220d3598484ba14d85ff03c32812f53bd9c95f4a157260fedc80aa6828b1f02357564736f6c63430008040033";

type LondonBurnMinterBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LondonBurnMinterBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LondonBurnMinterBase__factory extends ContractFactory {
  constructor(...args: LondonBurnMinterBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _mintableNFT: string,
    _payableErc20: string,
    _externalBurnableERC721: string,
    _sushiswap: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LondonBurnMinterBase> {
    return super.deploy(
      _mintableNFT,
      _payableErc20,
      _externalBurnableERC721,
      _sushiswap,
      overrides || {}
    ) as Promise<LondonBurnMinterBase>;
  }
  getDeployTransaction(
    _mintableNFT: string,
    _payableErc20: string,
    _externalBurnableERC721: string,
    _sushiswap: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mintableNFT,
      _payableErc20,
      _externalBurnableERC721,
      _sushiswap,
      overrides || {}
    );
  }
  attach(address: string): LondonBurnMinterBase {
    return super.attach(address) as LondonBurnMinterBase;
  }
  connect(signer: Signer): LondonBurnMinterBase__factory {
    return super.connect(signer) as LondonBurnMinterBase__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LondonBurnMinterBaseInterface {
    return new utils.Interface(_abi) as LondonBurnMinterBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LondonBurnMinterBase {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LondonBurnMinterBase;
  }
}
