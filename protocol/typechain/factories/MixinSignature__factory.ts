/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts';

import type { MixinSignature } from '../MixinSignature';

export class MixinSignature__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MixinSignature> {
    return super.deploy(overrides || {}) as Promise<MixinSignature>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MixinSignature {
    return super.attach(address) as MixinSignature;
  }
  connect(signer: Signer): MixinSignature__factory {
    return super.connect(signer) as MixinSignature__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): MixinSignature {
    return new Contract(address, _abi, signerOrProvider) as MixinSignature;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'messageHash',
        type: 'bytes32',
      },
      {
        internalType: 'uint8',
        name: 'v',
        type: 'uint8',
      },
      {
        internalType: 'bytes32',
        name: 'r',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'isSigned',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'sig',
        type: 'bytes',
      },
    ],
    name: 'splitSignature',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'r',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
      {
        internalType: 'uint8',
        name: 'v',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061040c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638677ebe81461003b578063a7bb5803146100c0575b600080fd5b6100a8600480360360a081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506101a0565b60405180821515815260200191505060405180910390f35b610179600480360360208110156100d657600080fd5b81019080803590602001906401000000008111156100f357600080fd5b82018360208201111561010557600080fd5b8035906020019184600183028401116401000000008311171561012757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506101ce565b604051808481526020018381526020018260ff168152602001935050505060405180910390f35b60006101af8686868686610269565b806101c357506101c28686868686610308565b5b905095945050505050565b6000806000604184511461024a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f696e76616c6964207369676e6174757265206c656e677468000000000000000081525060200191505060405180910390fd5b6020840151925060408401519150606084015160001a90509193909250565b60008573ffffffffffffffffffffffffffffffffffffffff1660018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156102dc573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff1614905095945050505050565b600060606040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a33320000000081525090506103ca8782886040516020018083805190602001908083835b60208310610380578051825260208201915060208101905060208303925061035d565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120878787610269565b9150509594505050505056fea2646970667358221220e55517d26df7b1452b487dda48a32846f537dfaffc575d35ec4cf18adc89336b64736f6c63430007030033';
